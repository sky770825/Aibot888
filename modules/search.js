class SearchManager{constructor(){this.searchIndex=[];this.history=JSON.parse(localStorage.getItem('searchHistory')|| '[]');this.favorites=JSON.parse(localStorage.getItem('searchFavorites')|| '[]');this.init();}init(){this.buildSearchIndex();this.bindEvents();}buildSearchIndex(){const commands=this.getAllCommands();this.searchIndex=commands.map((command,index)=>({...command,index,searchText: this.createSearchText(command)}));}createSearchText(command){return [ command.title,command.description,command.keywords.join(' '),command.category ].join(' ').toLowerCase();}search(query){if(!query.trim())return [];const searchTerm=query.toLowerCase();const results=this.searchIndex .filter(item=> item.searchText.includes(searchTerm)).sort((a,b)=>{const aScore=this.calculateRelevanceScore(a,searchTerm);const bScore=this.calculateRelevanceScore(b,searchTerm);return bScore - aScore;}).slice(0,Core.CONFIG.maxSearchResults);return results;}calculateRelevanceScore(item,searchTerm){let score=0;const searchText=item.searchText;if(searchText.includes(searchTerm))score +=10;if(item.title.toLowerCase().includes(searchTerm))score +=5;if(item.keywords.some(keyword=> keyword.toLowerCase().includes(searchTerm)))score +=3;if(item.category.toLowerCase().includes(searchTerm))score +=2;return score;}addToHistory(query){if(!query.trim())return;this.history=this.history.filter(item=> item !==query);this.history.unshift(query);this.history=this.history.slice(0,10);localStorage.setItem('searchHistory',JSON.stringify(this.history));}toggleFavorite(commandId){const index=this.favorites.indexOf(commandId);if(index > -1){this.favorites.splice(index,1);}else{this.favorites.push(commandId);}localStorage.setItem('searchFavorites',JSON.stringify(this.favorites));return this.favorites.includes(commandId);}getAllCommands(){return window.Commands || [];}bindEvents(){const searchInput=document.getElementById('smartSearchInput');const searchBtn=document.getElementById('searchBtn');if(searchInput){const debouncedSearch=Core.Utils.debounce((query)=>{this.performSearch(query);},Core.CONFIG.searchDelay);searchInput.addEventListener('input',(e)=>{debouncedSearch(e.target.value);});}if(searchBtn){searchBtn.addEventListener('click',()=>{const query=searchInput?.value.trim();if(query){this.addToHistory(query);this.performSearch(query);}});}}performSearch(query){const results=this.search(query);this.displayResults(results);Core.eventManager.emit('searchPerformed',{query,results});}displayResults(results){const resultsContainer=document.getElementById('searchResults');if(!resultsContainer)return;if(results.length===0){resultsContainer.innerHTML='<p>沒有找到相關結果</p>';return;}const html=results.map(result=> ` <div class="search-result-item" data-command-id="${result.id}"> <h4>${result.title}</h4> <p>${result.description}</p> <div class="result-actions"> <button class="copy-btn" data-command="${result.id}">複製</button> <button class="favorite-btn ${this.favorites.includes(result.id)? 'favorited' : ''}" data-command-id="${result.id}"> ${this.favorites.includes(result.id)? '❤️' : '🤍'}</button> </div> </div> `).join('');resultsContainer.innerHTML=html;resultsContainer.classList.add('show');}}const searchManager=new SearchManager();window.SearchManager=SearchManager;window.searchManager=searchManager;