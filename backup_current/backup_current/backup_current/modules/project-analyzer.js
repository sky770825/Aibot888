class ProjectAnalyzer{constructor(){this.analysisData=null;this.init();}init(){this.bindEvents();}bindEvents(){const analyzeBtn=document.getElementById('analyzeProject');const analyzeUploadBtn=document.getElementById('analyzeUploadedFiles');const projectFiles=document.getElementById('projectFiles');if(analyzeBtn){analyzeBtn.addEventListener('click',()=>{const projectPath=document.getElementById('projectPath')?.value;if(projectPath){this.analyzeProject(projectPath);}});}if(analyzeUploadBtn && projectFiles){analyzeUploadBtn.addEventListener('click',()=>{const files=projectFiles.files;if(files.length > 0){this.analyzeUploadedFiles(files);}});}}async analyzeProject(projectPath){try{this.showLoading();let analysisData;if(projectPath.startsWith('http: analysisData=await this.analyzeWebProject(projectPath);}else{analysisData=this.analyzeLocalProject(projectPath);}this.displayResults(analysisData);this.hideLoading();}catch(error){this.hideLoading();alert('專案分析失敗，請檢查路徑是否正確');}}async analyzeUploadedFiles(files){try{this.showLoading();const fileContents=await this.readFiles(files);const analysisData=this.performRealProjectAnalysis(fileContents);this.displayResults(analysisData);this.hideLoading();}catch(error){this.hideLoading();alert('檔案分析失敗');}}async readFiles(files){const fileContents=[];for(const file of files){const content=await this.readFileContent(file);fileContents.push({name: file.name,size: file.size,content: content,lastModified: file.lastModified});}return fileContents;}readFileContent(file){return new Promise((resolve,reject)=>{const reader=new FileReader();reader.onload=(e)=> resolve(e.target.result);reader.onerror=(e)=> reject(e);reader.readAsText(file);});}performRealProjectAnalysis(fileContents){return{projectInfo:{name: '智能專案分析',type: '多檔案專案',technology: this.detectTechnologies(fileContents),status: '智能分析完成',lastUpdate: new Date().toLocaleDateString(),fileCount: fileContents.length},projectStructure:{files: fileContents.map(file=>({name: file.name,size: Core.Utils.formatFileSize(file.size),type: this.getFileType(file.name),lines: this.countLines(file.content),lastModified: new Date(file.lastModified).toLocaleDateString()})),directories: []},projectFeatures: this.detectFeatures(fileContents),recommendations: this.generateRecommendations(fileContents),issues: this.detectIssues(fileContents),statistics: this.calculateStatistics(fileContents),codeAnalysis: this.analyzeCodeQuality(fileContents)};}detectTechnologies(fileContents){const technologies=new Set();fileContents.forEach(file=>{const content=file.content.toLowerCase();const ext=this.getFileExtension(file.name);if(ext==='html' && content.includes('react'))technologies.add('React');if(ext==='html' && content.includes('vue'))technologies.add('Vue.js');if(ext==='html' && content.includes('angular'))technologies.add('Angular');if(ext==='js' && content.includes('jquery'))technologies.add('jQuery');if(ext==='css' && content.includes('bootstrap'))technologies.add('Bootstrap');if(ext==='css' && content.includes('tailwind'))technologies.add('Tailwind CSS');});return Array.from(technologies).join(',')|| 'HTML5,CSS3,JavaScript';}detectFeatures(fileContents){const features=new Set();fileContents.forEach(file=>{const content=file.content.toLowerCase();if(content.includes('<form'))features.add('表單處理');if(content.includes('addeventlistener'))features.add('事件處理');if(content.includes('localstorage'))features.add('本地儲存');if(content.includes('fetch(')|| content.includes('xmlhttprequest'))features.add('API 調用');if(content.includes('@media')|| content.includes('viewport'))features.add('響應式設計');if(content.includes('animation')|| content.includes('transition'))features.add('動畫效果');});return Array.from(features);}generateRecommendations(fileContents){const recommendations=[];const hasConsoleLog=fileContents.some(file=> file.content.includes('console.log'));if(hasConsoleLog){recommendations.push({title: '移除 console.log 語句',description: '生產環境中應移除 console.log 語句',priority: 'low',solution: '在部署前移除所有 console.log 語句'});}const hasDoctype=fileContents.some(file=> file.content.includes('<!DOCTYPE html>'));if(!hasDoctype){recommendations.push({title: '添加 DOCTYPE 聲明',description: 'HTML 文件缺少 DOCTYPE 聲明',priority: 'high',solution: '在 HTML 文件開頭添加 <!DOCTYPE html> 聲明'});}return recommendations;}detectIssues(fileContents){const issues=[];fileContents.forEach(file=>{const content=file.content;const ext=this.getFileExtension(file.name);if(ext==='html' && !content.includes('<!DOCTYPE html>')){issues.push({type: 'error',title: '缺少 DOCTYPE 聲明',description: 'HTML 文件缺少 DOCTYPE 聲明，可能導致樣式問題',file: file.name});}if(ext==='html' && !content.includes('name="viewport"')){issues.push({type: 'warning',title: '缺少響應式 viewport',description: '缺少 viewport meta 標籤，影響行動裝置顯示',file: file.name});}});return issues;}calculateStatistics(fileContents){let totalSize=0;let totalLines=0;let totalComments=0;fileContents.forEach(file=>{totalSize +=file.size;totalLines +=this.countLines(file.content);totalComments +=this.countComments(file.content);});return{totalFiles: fileContents.length,totalSize: Core.Utils.formatFileSize(totalSize),totalLines: totalLines,commentLines: totalComments,complexity: totalLines > 1000 ? '複雜' : totalLines > 500 ? '中等' : '簡單'};}analyzeCodeQuality(fileContents){let totalScore=0;let fileCount=0;fileContents.forEach(file=>{const ext=this.getFileExtension(file.name);let score=100;if(ext==='html'){if(!file.content.includes('<!DOCTYPE html>'))score -=20;if(!file.content.includes('name="viewport"'))score -=10;}if(ext==='js'){if(file.content.includes('var '))score -=5;if(file.content.includes('=='))score -=5;}totalScore +=score;fileCount++;});const averageScore=fileCount > 0 ? Math.round(totalScore / fileCount): 0;return{overall:{score: averageScore,grade: this.getGrade(averageScore)},html:{score: 85,issues: []},css:{score: 80,issues: []},js:{score: 75,issues: []}};}getGrade(score){if(score >=90)return 'A';if(score >=80)return 'B';if(score >=70)return 'C';if(score >=60)return 'D';return 'F';}getFileType(filename){const ext=this.getFileExtension(filename);const typeMap={'html': 'HTML 檔案','htm': 'HTML 檔案','css': 'CSS 樣式表','js': 'JavaScript 檔案','json': 'JSON 檔案','md': 'Markdown 檔案','txt': '文字檔案','xml': 'XML 檔案','php': 'PHP 檔案','py': 'Python 檔案','java': 'Java 檔案','cpp': 'C++ 檔案','c': 'C 檔案','h': 'C 標頭檔案','hpp': 'C++ 標頭檔案','cs': 'C# 檔案','rb': 'Ruby 檔案','go': 'Go 檔案','rs': 'Rust 檔案','ts': 'TypeScript 檔案','jsx': 'JSX 檔案','tsx': 'TSX 檔案','vue': 'Vue 檔案','svelte': 'Svelte 檔案'};return typeMap[ext] || '未知檔案';}getFileExtension(filename){return filename.split('.').pop().toLowerCase();}countLines(content){return content.split('\n').length;}countComments(content){const lines=content.split('\n');return lines.filter(line=> line.trim().startsWith(' line.trim().startsWith('/*')|| line.trim().startsWith('*')|| line.trim().startsWith('<!--')).length;}displayResults(data){const analysisResults=document.getElementById('analysisResults');const analysisContent=document.getElementById('analysisContent');if(!analysisResults || !analysisContent)return;this.analysisData=data;const html=this.generateResultsHTML(data);analysisContent.innerHTML=html;analysisResults.style.display='block';Core.Utils.smoothScrollTo(analysisResults);}generateResultsHTML(data){return ` <div class="project-section project-info"> <h5>📊 專案資訊</h5> <div class="info-grid"> <div class="info-item"> <span class="info-label">專案名稱：</span> <span class="info-value">${data.projectInfo.name}</span> </div> <div class="info-item"> <span class="info-label">專案類型：</span> <span class="info-value">${data.projectInfo.type}</span> </div> <div class="info-item"> <span class="info-label">主要技術：</span> <span class="info-value">${data.projectInfo.technology}</span> </div> <div class="info-item"> <span class="info-label">分析狀態：</span> <span class="info-value">${data.projectInfo.status}</span> </div> </div> </div> <div class="project-section project-structure"> <h5>📁 專案結構</h5> <div class="file-list"> ${data.projectStructure.files.map(file=> ` <div class="file-item"> <i class="fas fa-file-code"></i> <div class="file-info"> <span class="file-name">${file.name}</span> <span class="file-details">${file.type}• ${file.size}• ${file.lines}行</span> </div> </div> `).join('')}</div> </div> <div class="project-section project-features"> <h5>✨ 專案功能</h5> <div class="features-list"> ${data.projectFeatures.map(feature=> ` <span class="feature-tag">${feature}</span> `).join('')}</div> </div> <div class="project-section project-recommendations"> <h5>💡 優化建議</h5> ${data.recommendations.map(rec=> ` <div class="recommendation-item"> <h6>${rec.title}</h6> <p>${rec.description}</p> ${rec.solution ? `<div class="solution">${rec.solution}</div>` : ''}</div> `).join('')}</div> <div class="project-section project-issues"> <h5>⚠️ 發現問題</h5> ${data.issues.map(issue=> ` <div class="issue-item ${issue.type}"> <h6>${issue.title}</h6> <p>${issue.description}</p> ${issue.file ? `<small>檔案: ${issue.file}</small>` : ''}</div> `).join('')}</div> <div class="project-section project-statistics"> <h5>📈 統計資料</h5> <div class="stats-grid"> <div class="stat-item"> <span class="stat-label">總檔案數</span> <span class="stat-value">${data.statistics.totalFiles}</span> </div> <div class="stat-item"> <span class="stat-label">總大小</span> <span class="stat-value">${data.statistics.totalSize}</span> </div> <div class="stat-item"> <span class="stat-label">總行數</span> <span class="stat-value">${data.statistics.totalLines}</span> </div> <div class="stat-item"> <span class="stat-label">註解行數</span> <span class="stat-value">${data.statistics.commentLines}</span> </div> </div> </div> `;}showLoading(){const analyzeBtn=document.getElementById('analyzeProject');if(analyzeBtn){analyzeBtn.innerHTML='<i class="fas fa-spinner fa-spin"></i> 分析中...';analyzeBtn.disabled=true;}}hideLoading(){const analyzeBtn=document.getElementById('analyzeProject');if(analyzeBtn){analyzeBtn.innerHTML='<i class="fas fa-analytics"></i> 分析專案結構';analyzeBtn.disabled=false;}}}const projectAnalyzer=new ProjectAnalyzer();window.ProjectAnalyzer=ProjectAnalyzer;window.projectAnalyzer=projectAnalyzer;